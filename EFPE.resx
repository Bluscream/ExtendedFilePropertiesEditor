<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMgAZAIcAAAQCBDSSvJyWbJzS9IxSRCROXPTWhNzytBwmHExCJDyu3GRiZNTy/AQWJPyGZNTS
        1PTqzDQyLMSuTFR6lOz2/HSOXHS21CQCBMTepHyaZGxeLAQKFBQyPPzOtGxydPzifPz25KTe/Hx+ZPzq
        jDzC9BwWFKyqrLzm/JyalNTe1DQ2NIyGXFRSVLS6rMxqVCwuHOzq7HzG7BQKBPTqvFxaXGRubBQSBIyW
        nHx2bPz+5FzC7JyenBQGBIRqXBRifPTelExGRPymhPTmpMzi9DQ+RISChJTO7Pz2tFzK/AwGBMTGxDxC
        RCwiJNzazPT+7AwKBCw6JHRyZLTa9HR6fLSytOTi5MTCxPzu5GRaXGxqbBQSFExOTIyKjPzahCQiJFy+
        7OTu9PyihPTy3EQqJGyKlJSSfPzmtPz6/BweHLSOfDw6PFxSVLy6vCwqLPTy9ITS9BQOBPzqrFxeXJSS
        lPz+9KSmpIx+RPzmlMzq/GTK9MzOzERCRAwODHRydHx6fBQWFAQGBGSClPx+XPzCpLSeRIR+fOzm5OyS
        dHzC5Bw+THyOlPzypCQ2PAwSFKza7Nz6vDy25PzehMTi9GTG9KSipMzKzPTalPz6xPzuvPzipPT29Nze
        3Dw+PPzy1CQWFNza3PT+/PzmdDQ6PExKTOTy/GTO/IxWRGRmZNTW1CQGBHyeZKyurFRWVOzu7Mzm9ISG
        hJTS7LTe9LS2tOTm5GxubIyOjCQmJLy+vCwuLJSWlERGRHR2dHx+fDQyNPz27JyanGRudHx2dAwGDAwK
        DExOVITS/BQODFxeZPz+/BQWHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAMgAZAAAI/wCRCRyI7AzBgwMNKjy4kGHBhwsj
        PhQYUSLChgkpItx4kSNBixkNaoRIUmRJgW4UtvJFwY1Hkwc1VfFIU2QWXsjcbGGD6hOyT62QaYJxZlbQ
        M5uCttqErAqtW5RuwXhQUKJIiRRqjfp0iwaVHWxMvKJUqc+OObWKyCqitgqXV79McNLDwo8SNjQdGjJB
        iZafHXXmFHqV00QtN3KQyaJFCe6vX8jk7AiGzE+lgg9y1Tk68WSrX252yaJiItcqE3PqkEb2ag6XOoFp
        sak1Z04lWmdy7SLKC4AXVGeCj2wI0xfBTSldntEDA5khPQObE5Q+BwCuoA4/Ilu1YBWyVrVoAP9hwUXJ
        yIGGduzKMmVXn120akzx4EEUAC2sshwrNKsS9JJnsAJADZV4AcAGDQAAACC8KGfQLLTwsaAXWiioYCoX
        8JAKDxO24YUuhmzyCUwULQCAGn9wEAAkJCjgg4ImPDSLLgCgQclMblQiBwAluOCAIIIQYB1TGymk0I4A
        JDJJKTp8MQkSBQBATFCarAGALagMRwMAYxwSRhhCttHERMGRWNCOjVjwBiIxxIDIGxMAoMJMqyiIwkao
        KJhGB4P0AEAbPgmnHUTHAMCIEbAMAAssRoQQCAC9zNSHgnLcwMWlb+UyKQA4+HJFIX8GSpJ2Z+xIhBSx
        OCKFFI6cQIacsyD/IyAgcMjwBBxw8GGMMX8wgYYfAr1inagJGXkkAERIgscQkkgyBAOKQDrTlnBI8IEB
        PwhhBgRiaOJGKykhw0WoVXV21ZkALAEGBetSQAooN8hZxRm9AUJIKF3cEQcmnYCAkLCAksnRGSbu4VJG
        v1iXghMtAAKABvhaksm2OTywRR9EjovLJmUS1EoftmwBXakA6KIcQbkAAAUGjxwgAiBP2DHCIotckkMT
        uJw4i0E71EhVRsgkrKAawRV8cLkJI1CBKqpkYIuCCawgQBlRSDjKTAZVkbMKc6yyw2UG6dELj7mgy8nJ
        A1Vn4dpsJ8PJLxI9wEIjFnIxkRuy/NyUFSNqM2QQDJX4J3jgejxQyS2VSJddFbdQUQlnJgkKdF4DW0Vi
        5JpgbmZBmXfu+RmdS35R6AIFBAA7
</value>
  </data>
</root>